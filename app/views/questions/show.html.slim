#question data-id=question.id
  h1#question-title = question.title

  = render 'shared/rating', resource: question, id: "question-rating"

  - if current_user&.author_of?(question)
    = link_to t('.delete_question'), question_path(question), method: :delete, data: { confirm: t('actions.destroy_confirmation') }
    = link_to t('.edit_question'), '#', id: 'question-edit-button'

  p#question-body = question.body

  ul#question-files
    h3 = t('.files')
    - if question.files.attached?
      = render collection: question.files, partial: 'shared/file'

  ul#question-links
    h3 = t('.links')
    = render question.links

  ul.comments#question-comments
    h3 = t('.comments')
    = render question.comments

  - if user_signed_in?
    #question-comment-errors
      = render 'shared/errors', resource: comment

    = form_for [question, comment], remote: true, type: :json, namespace: 'question' do |form|
      = render 'comments/form', form: form

#question-edit-form.hidden
  #question-errors
  = form_for question, remote: true do |form|
    = render 'form', form: form, submit_text: t('.edit_submit')
    = link_to t('actions.cancel'), '#', id: 'question-edit-cancel'

ul#answers
  #best-answer
    - if question.best_answer.present?
      = render question.best_answer
  = render(answers - [question.best_answer])

- if user_signed_in?
  #answer-errors
    = render 'shared/errors', resource: answer
  = form_for [question, answer], remote: true do |form|
    = render 'answers/form', form: form, body_name: t('.new_answer'), submit_text: t('.send_answer')

= link_to t('actions.back'), questions_path
